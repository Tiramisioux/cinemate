{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Cinemate","text":"<p>Welcome to the Cinemate documentation.</p> <p>Edit <code>docs/index.md</code> and hit save \u2013 the site updates automatically when running <code>mkdocs serve</code>.</p>"},{"location":"coverpage/","title":"Cinemate Docs","text":"<p>Built: 2025-07-07 01:31 UTC</p>"},{"location":"inverse_buttons/","title":"How \u201cinverse\u201d (1-0-1) buttons are auto-detected","text":"<p>Many latching push-buttons are wired closed = logic 1 at rest and open = 0 when pressed. At start-up each SmartButton performs:</p> <pre><code>if self.button.is_pressed:      # high at rest \u2192 treat as \u201cinverse\u201d\n    self.inverse = True\n</code></pre> <p>If so, the framework swaps the handlers:</p> <pre><code>when_pressed  \u2190 on_release\nwhen_released \u2190 on_press\n</code></pre>"},{"location":"settings-json/","title":"<code>settings.json</code> Cheat Sheet","text":"<p>A quick-reference table of every setting in <code>settings.json</code>, what it does, and its allowed values. <pre><code>    {\n      \"pin\": 27,\n      \"state_on_action\": {\"method\": \"set_all_lock\", \"args\": [1]},\n      \"state_off_action\": {\"method\": \"set_all_lock\", \"args\": [0]}\n    },\n</code></pre></p> <pre><code>if self.button.is_pressed:      # high at rest \u2192 treat as \u201cinverse\u201d\n    self.inverse = True\n</code></pre>"},{"location":"settings-json/#geometry","title":"Geometry","text":"JSON Path Description Values <code>geometry.camX.rotate_180</code> Rotate image 180\u00b0 on startup <code>true</code> / <code>false</code> <code>geometry.camX.horizontal_flip</code> Flip image horizontally on startup <code>true</code> / <code>false</code> <code>geometry.camX.vertical_flip</code> Flip image vertically on startup <code>true</code> / <code>false</code>"},{"location":"settings-json/#output","title":"Output","text":"JSON Path Description Values <code>output.camX.hdmi_port</code> Select DRM connector for HDMI output (<code>cinepi-raw --hdmi-port</code>) <code>0</code>, <code>1</code>, or <code>-1</code> (auto)"},{"location":"settings-json/#gpio-outputs","title":"GPIO Outputs","text":"JSON Path Description Values <code>gpio_output.pwm_pin</code> PWM pin for strobe / shutter sync BCM pin number (e.g. 19) <code>gpio_output.rec_out_pin</code> Pin(s) pulled high while recording List of BCM pins"},{"location":"settings-json/#fixed-palette-arrays","title":"Fixed-Palette Arrays","text":"JSON Path Description Values <code>arrays.iso_steps</code> ISO step presets (if <code>iso_free = false</code>) <code>[100,\u2026,sensor_native]</code> <code>arrays.shutter_a_steps</code> Shutter angles (if <code>shutter_a_free = false</code>) <code>[1.0,\u2026,360.0]</code> (degrees) <code>arrays.fps_steps</code> Frame-rate presets (if <code>fps_free = false</code>) integers \u2264 sensor-mode <code>fps_max</code> <code>arrays.wb_steps</code> White-balance Kelvin presets <code>[2000,\u2026,9000]</code> (Kelvin)"},{"location":"settings-json/#flicker-suppression","title":"Flicker Suppression","text":"JSON Path Description Values <code>settings.light_hz</code> Frequencies used to calculate flicker-free shutter angles <code>[50]</code>, <code>[60]</code>, or <code>[50,60]</code>"},{"location":"settings-json/#analog-controls","title":"Analog Controls","text":"JSON Path Description Values <code>analog_controls.*_pot</code> ADC channel for ISO, shutter, FPS, or WB (Grove HAT) <code>0\u20137</code> or <code>null</code>"},{"location":"settings-json/#free-mode-overrides","title":"Free-Mode Overrides","text":"<p>When <code>true</code>, ignores the fixed arrays and exposes full legal ranges.</p> JSON Path Description Values <code>free_mode.iso_free</code> Full ISO range <code>true</code> / <code>false</code> <code>free_mode.shutter_a_free</code> Full shutter-angle range <code>true</code> / <code>false</code> <code>free_mode.fps_free</code> Full frame-rate range <code>true</code> / <code>false</code> <code>free_mode.wb_free</code> Full white-balance range <code>true</code> / <code>false</code> <p>Free ranges: ISO 100\u20133200, Shutter 1.0\u00b0\u2013360.0\u00b0, FPS 1\u2013fps_max, WB 1000\u201310000 K</p>"},{"location":"settings-json/#anamorphic-preview","title":"Anamorphic Preview","text":"JSON Path Description Values <code>anamorphic_preview.anamorphic_steps</code> Anamorphic squeeze factors list of floats \u2265 1.0 <code>anamorphic_preview.default_anamorphic_factor</code> Initial factor stored in Redis on power-up one of the above"},{"location":"settings-json/#buttons-switches","title":"Buttons &amp; Switches","text":"JSON Path Description Values <code>buttons[]</code> SmartButton entries: <code>press_action</code>, <code>click_action</code>, <code>hold_action</code>, etc. List of BCM pins + args <code>two_way_switches[]</code> Latching switches: <code>state_on_action</code> / <code>state_off_action</code> <code>pin</code> + optional <code>pull_up</code> <code>three_way_switches[]</code> 3-position switches: <code>state_0/1/2_action</code> <code>pins</code>: [low, mid, high]"},{"location":"settings-json/#encoders","title":"Encoders","text":"JSON Path Description Values <code>rotary_encoders[]</code> GPIO rotary (CLK/DT) + optional button <code>clk_pin</code>, <code>dt_pin</code> BCM pins <code>quad_rotary_encoders</code> I\u00b2C RGB Encoder breakout (0x49) with four dials/buttons Indices <code>\"0\"</code>\u2013<code>\"3\"</code>"},{"location":"settings-json/#oled-status-screen","title":"OLED Status Screen","text":"JSON Path Description Values <code>i2c_oled.width</code> OLED panel width in pixels integer <code>i2c_oled.height</code> OLED panel height in pixels integer <code>i2c_oled.values</code> Redis keys or pseudo-keys to display (e.g. <code>cpu_temp</code>) ordered list <pre><code>if self.button.is_pressed:      # high at rest \u2192 treat as \u201cinverse\u201d\n    self.inverse = True\n</code></pre>"}]}