#!/bin/bash

# Safe automount script for SSDs triggered by udev
set -e

DEVICE="$1"
ACTION="$2"
LABEL=$(blkid -s LABEL -o value "$DEVICE" || true)
FSTYPE=$(blkid -s TYPE -o value "$DEVICE" || true)
MOUNTPOINT="/media/$LABEL"

log() {
    logger -t ssd-automount "$@"
}

log "[ssd-automount] Device: $DEVICE"
log "[ssd-automount] Label: $LABEL"
log "[ssd-automount] FS: $FSTYPE"
log "[ssd-automount] Action: $ACTION"
log "[ssd-automount] Mount point: $MOUNTPOINT"

# Wait a short time to avoid race with kernel finishing USB attach
sleep 0.5

case "$ACTION" in
    add)
        # Double-check device exists
        if [ ! -b "$DEVICE" ]; then
            log "[ssd-automount] $DEVICE is not a block device. Aborting."
            exit 1
        fi

        mkdir -p "$MOUNTPOINT"

        # Attempt mount, suppress recovery, noatime improves performance
        if mount -t "$FSTYPE" -o rw,noatime,nofail "$DEVICE" "$MOUNTPOINT"; then
            log "[ssd-automount] Mounted $DEVICE at $MOUNTPOINT"
        else
            log "[ssd-automount] Mount failed: $FSTYPE"
            umount "$MOUNTPOINT" 2>/dev/null || true
            rmdir "$MOUNTPOINT" 2>/dev/null || true
            exit 1
        fi
        ;;

    remove)
        if mountpoint -q "$MOUNTPOINT"; then
            log "[ssd-automount] Unmounting $DEVICE from $MOUNTPOINT"
            umount "$MOUNTPOINT" || log "[ssd-automount] Failed to unmount $MOUNTPOINT"
        else
            log "[ssd-automount] $MOUNTPOINT is not mounted"
        fi
        rmdir "$MOUNTPOINT" 2>/dev/null || true
        ;;

    *)
        log "[ssd-automount] Unknown action: $ACTION"
        exit 1
        ;;
esac

exit 0